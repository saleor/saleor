# Generated by Django 4.2.16 on 2025-01-14 14:28

from django.db import migrations
from django.db.models import OuterRef, Subquery

# The batch of size 5000 takes ~0.1 second and consumes ~4MB memory at peak
BATCH_SIZE = 5000


def set_discount_currency(apps, _schema_editor):
    OrderDiscount = apps.get_model("discount", "OrderDiscount")
    qs = (
        OrderDiscount.objects.filter(currency="")
        .select_related("order")
        .order_by("id")
        .only("id", "currency", "order__currency")
    )
    for ids in queryset_in_batches(qs):
        OrderDiscount.objects.filter(id__in=ids).update(
            currency=Subquery(
                OrderDiscount.objects.filter(pk=OuterRef("id")).values(
                    "order__currency"
                )[:1]
            )
        )


def queryset_in_batches(queryset):
    start_pk = 0
    while True:
        qs = queryset.filter(pk__gt=start_pk)[:BATCH_SIZE]
        pks = list(qs.values_list("pk", flat=True))
        if not pks:
            break
        yield pks
        start_pk = pks[-1]


class Migration(migrations.Migration):
    dependencies = [
        ("discount", "0083_auto_20240510_0838"),
    ]

    operations = [
        migrations.RunPython(
            set_discount_currency,
            reverse_code=migrations.RunPython.noop,
        )
    ]
