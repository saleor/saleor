name: TEST-ENV-CLEANUP-CRON
# Daily cleanup of all stale environments (environments for which there is no open PR with "test deployment" label)

on:
  schedule:
    - cron: '0 2 * * *' # UTC
  workflow_dispatch:

jobs:
  cleanup:
    name: Remove stale test env deployments
    runs-on: ubuntu-latest
    permissions:
      id-token: write # needed by aws-actions/configure-aws-credentials
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_TESTENVS_ACCOUNT_ID }}:role/${{ secrets.AWS_TESTENVS_CICD_ROLE_NAME }}
          aws-region: ${{ vars.AWS_TESTENVS_REGION }}

      - name: Get branches from open PRs with "test deployment" label
        id: get-branches
        uses: actions/github-script@v8
        with:
          script: |
            // Get all open PRs - pagination is needed or otherwise we would retrieve only first 30
            const pulls = await github.paginate(github.rest.pulls.list, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            // Select PRs with "test deployment" label and extract their source branches
            const branches = pulls
              .filter(pr => pr.labels.some(label => label.name === 'test deployment'))
              .map(pr => pr.head.ref);

            // Deduplicate (in case there are multiple PRs with the same source branch)
            return [...new Set(branches)];

      - name: Invoke test-env-manager lambda
        uses: gagoar/invoke-aws-lambda@2ea0b5791eba7a9513ddf0fb7f91aa8f098b6458 # v3.4.0
        with:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          REGION: ${{ vars.AWS_TESTENVS_REGION }}
          FunctionName: test-env-manager
          Payload: >-
            {
              "action": "daily-cleanup",
              "labels_to_preserve": ${{ steps.get-branches.outputs.result }}
            }
          LogType: Tail
