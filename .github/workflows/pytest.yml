name: Pytest

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**.py"
      - Dockerfile
      - requirements_dev.txt
      - "saleor/**"
      - ".github/workflows/pytest.yml"
      - pyproject.toml
      - poetry.lock
  push:
    branches:
      - main
      - ci/*
    paths:
      - "**.py"
      - Dockerfile
      - requirements_dev.txt
      - "saleor/**"
      - pyproject.toml
      - poetry.lock

env:
  BENCH_PATH: ./queries-results.json
  DATABASE_URL: "postgres://saleor:saleor@postgres:5432/saleor"
  SECRET_KEY: ci-test

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: saleor
          POSTGRES_USER: saleor
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get install -y libpq-dev

      - name: Install and configure poetry
        run: |
          python -m pip install poetry==1.5.0

      - name: Cache the venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m poetry install --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      # Run linters and Django related checks
      # `git config` command is a workaround for https://github.com/actions/runner-images/issues/6775
      - name: Run Linters and Checks
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          python -m poetry run pre-commit run --all
        if: ${{ always() }}

      - name: Run unit tests
        run: |
          python -m poetry run pytest \
            -m "not e2e" \
            --cov \
            --junitxml=junit/test-results.xml \
            --django-db-bench=${{ env.BENCH_PATH }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      # Publish coverage and test results
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: junit/test-results.xml
        if: ${{ always() }}

      # Publish detected differences as comment
      - uses: NyanKiyoshi/pytest-django-queries-ci-tools@v1
        with:
          query_raw_dump_path: ${{ env.BENCH_PATH }}
          diff_endpoint: "https://dtab784j47g1o.cloudfront.net/default/saleor-db-queries-bot-diff"
          diff_results_base_url: "https://dtab784j47g1o.cloudfront.net"
        if: github.event_name == 'pull_request' && github.repository == 'saleor/saleor'

      # Save results for future comparison against pull requests
      - uses: NyanKiyoshi/pytest-django-queries-ci-tools@v1
        with:
          query_raw_dump_path: ${{ env.BENCH_PATH }}
          upload_endpoint: ${{ secrets.QUERIES_UPLOAD_ENDPOINT_URL }}
          upload_secret_key: ${{ secrets.QUERIES_UPLOAD_SECRET }}
        if: github.event_name == 'push' && github.repository == 'saleor/saleor'

      - name: Run E2E tests
        run: |
          python -m poetry run pytest \
            -m "e2e"
