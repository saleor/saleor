[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "saleor"
version = "3.21.0-a.0"
description = "A modular, high performance, headless e-commerce platform built with Python, GraphQL, Django, and React."
authors = [ "Saleor Commerce <hello@saleor.io>" ]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://saleor.io/"
repository = "https://github.com/saleor/saleor"
documentation = "https://docs.saleor.io/"
package-mode = false

  [tool.poetry.dependencies]
  python = "~3.12"
  Adyen = "^4.0.0"
  asgiref = "^3.7.2"
  Authlib = "^1.3.1"
  authorizenet = "^1.1.5"
  azure-common = "^1.1.28"
  azure-storage-blob = "^12.23.1"
  azure-storage-common = "^2.1.0"
  babel = ">=2.8,<2.15"
  boto3 = "^1.28"
  botocore = "^1.35"
  braintree = ">=4.2,<4.30"
  cryptography = "^43.0.1"
  dj-database-url = "^2"
  dj-email-url = "^1"
  django = {version = "^4.2", extras = ["bcrypt"]}
  django-cache-url = "^3.1.2"
  django-celery-beat = "^2.2.1"
  django-countries = "^7.2"
  django-filter = "^24.3"
  django-measurement = "^3.0"
  django-mptt = "^0"
  django-phonenumber-field = ">=4,<8"
  django-prices = "^2.3"
  django-stubs-ext = "^4.2.1"
  draftjs-sanitizer = "^1.0.0"
  faker = ">=26.0.0,<27.0"
  google-cloud-pubsub = ">=1.7,<3.0"
  google-cloud-storage = "^2.0.0"
  google-i18n-address = "^3.1.0"
  graphene = "<3.0"
  graphql-core = "^2.3.2"
  graphql-relay = "^2.0.1"
  gunicorn = "^22.0.0"
  html-to-draftjs = "^1.0.1"
  jaeger-client = "^4.5.0"
  lxml = "^4.9.3"
  markdown = "^3.1.1"
  measurement = "^3.2.2"
  micawber = "^0.5.5"
  oauthlib = "^3.1"
  opentracing = "^2.3.0"
  petl = "1.7.15"
  phonenumberslite = "^8.13.47"
  pillow = "^11.0.0"
  pillow-avif-plugin = "^1.3.1"
  posuto = "^2024.7.0"
  prices = "^1.0"
  promise = "^2.3"
  pybars3 = "^0.9.7"
  pyjwt = "^2.10.1"
  python-dateutil = "^2.8.2"
  python-http-client = "^3.3.7"
  python-json-logger = ">=0.1.11,<2.1.0"
  pytimeparse = "^1.1.8"
  razorpay = "^1.2"
  redis = "^5.0.1"
  requests = "^2.32"
  requests-hardened = "1.0.0b5"
  Rx = "^1.6.3"
  semantic-version = "^2.10.0"
  sendgrid = "^6.7.1"
  sentry-sdk = "^2.12"
  stripe = "^3.0.0"
  text-unidecode = "^1.2"
  urllib3 = "^1.26.19"
  uvicorn = {extras = ["standard"], version = "^0.32.0"}
  setuptools = "^71.1.0"
  psycopg = {version = "^3.1.8", extras = ["binary"]}

    [tool.poetry.dependencies.celery]
    version = ">=4.4.5,<6.0.0"
    extras = [ "redis" ]

    [tool.poetry.dependencies.django-storages]
    version = "^1.11"
    extras = [ "google" ]

    [tool.poetry.dependencies.python-magic]
    version = "^0.4.27"
    markers = "sys_platform != 'win32'"

    [tool.poetry.dependencies.python-magic-bin]
    version = "^0.4.14"
    platform = "win32"

  [tool.poetry.group.dev.dependencies]
  coverage = "^7.2"
  deptry = "^0.21.1"
  django-extensions = "^3.1.2"
  django-stubs = { version = "^4.2.7", extras = ["compatible-mypy"] }
  fakeredis = "^2.10"
  freezegun = "^1"
  mypy-extensions = "^1.0.0"
  openpyxl = "^3.1.5"
  pre-commit = "^3.8"
  pytest = "^8.3.2"
  pytest-asyncio = "^0.25.0"
  pytest-celery = "^1.0.1"
  pytest-cov = "^5.0.0"
  pytest-django = "4.9.0"
  pytest-django-queries = "~1.2"
  pytest-memray = "^1.5.0"
  pytest-mock = "^3.6.1"
  pytest-recording = "^0.13.0"
  pytest-socket = "^0.7.0"
  pytest-xdist = "^3.0.2"
  pywatchman = "^2.0.0"
  ruff = "^0.6.9"
  semgrep = ">=1.34.0"
  types-certifi = "^2021.10.8"
  types-freezegun = "^1.1.7"
  types-mock = "^5.0.0.5"
  types-setuptools = "^75.6.0.20241126"
  types-python-dateutil = "^2.8.19"
  types-redis = "^4.6.0"
  types-requests = "^2.31.0" # Cannot upgrade due to using an old version of urllib3 (https://github.com/saleor/saleor/issues/17130)
  types-six = "^1.16.17"
  vcrpy = ">=4.0,<7.0"

[tool.deptry]
extend_exclude = ["conftest\\.py", ".*/conftest\\.py", ".*/tests/.*"]

  [tool.deptry.package_module_name_map]
  graphql-core = "graphql"
  pillow = "PIL"
  python-magic-bin = "magic"

  [tool.deptry.per_rule_ignores]
  DEP001 = ["pkg_resources"]
  DEP002 = ["azure-common", "azure-storage-blob", "azure-storage-common", "django-redis", "gunicorn", "psycopg", "pyxb"]

[tool.django-stubs]
django_settings_module = "saleor.settings"

[tool.mypy]
allow_untyped_globals = true
allow_redefinition = true
check_untyped_defs = true
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
warn_redundant_casts = true
warn_unused_ignores = true

plugins = [
  "mypy_django_plugin.main"
]

exclude = [
  "tests/"
]

  [[tool.mypy.overrides]]
  module = ["saleor.*.migrations.*"]
  ignore_errors = true


[tool.ruff]
target-version = "py39"

  [tool.ruff.lint]
  select = [
    "ASYNC",
    "B",
    "C4",
    "D",
    "DTZ",
    "E",
    "F",
    "FURB",
    "G",
    "I",
    "ISC001",
    "ISC002",
    "LOG",
    "PGH",
    "PIE",
    "PT",
    "PYI",
    "RET",
    "T20",
    "UP",
    "W"
  ]
  ignore = [
    "B009", # Do not call getattr with a constant value
    "B010", # Do not call setattr with a constant value
    "B023", # Function definition does not bind loop variable
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in __init__
    "D202", # No blank lines allowed after function docstring
    "D203", # 1 blank line required before class docstring
    "D206", # Docstring should be indented with spaces, not tabs
    "D213", # Multi-line docstring summary should start at the second line
    "D407", # Missing dashed underline after section
    "E501", # Line too long
    "PT019", # Fixture without value is injected as parameter, use @pytest.mark.usefixtures instead
    "PYI041", # Use `float` instead of `int | float`
    "RET504" # Unnecessary assignment before return statement
  ]

  [tool.ruff.lint.flake8-pytest-style]
  fixture-parentheses = false
  mark-parentheses = false

  [tool.ruff.lint.isort]
  known-first-party = ["saleor"]
