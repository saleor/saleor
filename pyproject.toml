[build-system]
requires = [ "poetry-core>=1.0.0" ]
build-backend = "poetry.core.masonry.api"

[tool.poe]
envfile = ".env"

[tool.poe.tasks.start]
help = "Start development server with hot reload"
cmd = "uvicorn saleor.asgi:application --reload"

[tool.poe.tasks.worker]
help = "Start Celery worker"
cmd = "celery --app saleor.celeryconf:app worker -E"

[tool.poe.tasks.scheduler]
help = "Start Celery Beat scheduler"
cmd = "celery --app saleor.celeryconf:app beat --scheduler saleor.schedulers.schedulers.DatabaseScheduler"

[tool.poe.tasks.build-schema]
cmd = "python manage.py get_graphql_schema"
capture_stdout = "saleor/graphql/schema.graphql"
help = "Build GraphQL schema to saleor/graphql/schema.graphql file"

[tool.poe.tasks.migrate]
cmd = "python manage.py migrate"
help = "Run database migrations"

[tool.poe.tasks.release]
shell = "npm run release"
help = """
Release new Saleor verison
Prerequisities:
- Node installed on machine
- Run npm install to install dependencies
"""

[tool.poe.tasks.shell]
cmd = "python manage.py shell"
help = "Start Django shell in interactive mode"

[tool.poe.tasks.populatedb]
cmd = "python manage.py populatedb --createsuperuser"
help = """
Populates database with sample data and creates admin user with credentials:
- email: admin@example.com
- password: admin
"""

[tool.poe.tasks.test]
cmd = "pytest --reuse-db"
help = "Run tests with db reuse to speed up testing time"

[tool.poetry]
name = "saleor"
version = "3.21.9"
description = "A modular, high performance, headless e-commerce platform built with Python, GraphQL, Django, and React."
authors = [ "Saleor Commerce <hello@saleor.io>" ]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://saleor.io/"
repository = "https://github.com/saleor/saleor"
documentation = "https://docs.saleor.io/"
package-mode = false

  [tool.poetry.dependencies]
  python = "~3.12"
  Adyen = "^4.0.0"
  asgiref = "^3.7.2"
  Authlib = "^1.4.1"
  authorizenet = "^1.1.5"
  azure-common = "^1.1.28"
  azure-storage-blob = "^12.23.1"
  azure-storage-common = "^2.1.0"
  babel = ">=2.8,<2.18"
  boto3 = "^1.28"
  botocore = "^1.37"
  braintree = ">=4.2,<4.32"
  cryptography = "^44.0.2"
  dj-database-url = "^2"
  dj-email-url = "^1"
  django-cache-url = "^3.1.2"
  django-celery-beat = "^2.2.1"
  django-countries = "^7.2"
  django-filter = "^24.3"
  django-measurement = "^3.0"
  django-mptt = "^0"
  django-phonenumber-field = ">=4,<9"
  django-stubs-ext = "^5.1.1"
  draftjs-sanitizer = "^1.0.0"
  faker = ">=26.0.0,<27.0"
  google-cloud-pubsub = ">=1.7,<3.0"
  google-cloud-storage = "^2.0.0"
  google-i18n-address = "^3.1.0"
  graphene = "<3.0"
  graphql-core = "^2.3.2"
  graphql-relay = "^2.0.1"
  html-to-draftjs = "^1.0.1"
  lxml = "^4.9.3"
  markdown = "^3.1.1"
  measurement = "^3.2.2"
  micawber = "^0.5.5"
  oauthlib = "^3.1"
  petl = "1.7.15"
  phonenumberslite = "^8.13.52"
  pillow = "^11.1.0"
  pillow-avif-plugin = "^1.5.2"
  posuto = "^2025.1.0"
  prices = "^1.0"
  promise = "^2.3"
  pybars3 = "^0.9.7"
  pyjwt = "^2.10.1"
  python-dateutil = "^2.8.2"
  python-http-client = "^3.3.7"
  python-json-logger = ">=0.1.11,<3.3.0"
  pytimeparse = "^1.1.8"
  razorpay = "^1.2"
  redis = "^5.0.1"
  requests = "^2.32"
  requests-hardened = ">=1.0.0,<2.0.0"
  Rx = "^1.6.3"
  semantic-version = "^2.10.0"
  sendgrid = "^6.7.1"
  sentry-sdk = "^2.12"
  stripe = "^3.0.0"
  text-unidecode = "^1.2"
  urllib3 = "^1.26.19"
  setuptools = "^76.0.0"
  pydantic = "^2.10.6"
  pydantic-core = "^2.33.0"
  opentelemetry-api = "^1.32.1"
  opentelemetry-sdk = "^1.32.1"
  opentelemetry-semantic-conventions = "^0.53b1"

    [tool.poetry.dependencies.django]
    version = "^4.2"
    extras = [ "bcrypt" ]

    [tool.poetry.dependencies.uvicorn]
    extras = [ "standard" ]
    version = "^0.32.0"

    [tool.poetry.dependencies.psycopg]
    version = "^3.1.8"
    extras = [ "binary" ]

    [tool.poetry.dependencies.opentelemetry-distro]
    extras = [ "otlp" ]
    version = "^0.53b1"

    [tool.poetry.dependencies.celery]
    version = ">=4.4.5,<6.0.0"
    extras = [ "redis", "sqs" ]

    [tool.poetry.dependencies.django-storages]
    version = "^1.11"
    extras = [ "google" ]

    [tool.poetry.dependencies.python-magic]
    version = "^0.4.27"
    markers = "sys_platform != 'win32'"

    [tool.poetry.dependencies.python-magic-bin]
    version = "^0.4.14"
    platform = "win32"

[tool.poetry.group.dev.dependencies]
coverage = "^7.6"
deptry = "^0.23.0"
django-extensions = "^3.1.2"
fakeredis = "^2.26"
freezegun = "^1"
mypy-extensions = "^1.0.0"
openpyxl = "^3.1.5"
pre-commit = "^4.0"
pytest = "^8.3.2"
pytest-asyncio = "^0.25.0"
pytest-celery = "^1.0.1"
pytest-cov = "^6.0.0"
pytest-django = "4.9.0"
pytest-django-queries = "~1.2"
pytest-memray = "^1.5.0"
pytest-mock = "^3.6.1"
pytest-recording = "^0.13.0"
pytest-socket = "^0.7.0"
pytest-xdist = "^3.0.2"
pywatchman = "^2.0.0"
ruff = "^0.9.1"
types-certifi = "^2021.10.8"
types-freezegun = "^1.1.7"
types-mock = "^5.0.0.5"
types-setuptools = "^75.6.0.20241126"
types-python-dateutil = "^2.9.0"
types-redis = "^4.6.0"
types-requests = "^2.31.0"
types-six = "^1.16.17"
vcrpy = ">=4.0,<7.0"
poethepoet = "^0.32.2"
ipdb = "^0.13.13"

  [tool.poetry.group.dev.dependencies.django-stubs]
  version = "^4.2.7"
  extras = [ "compatible-mypy" ]

[tool.poetry.group.semgrep.dependencies]
semgrep = "<=1.50.0 || >=1.86.0"

[tool.deptry]
extend_exclude = [ "conftest\\.py", ".*/conftest\\.py", ".*/tests/.*" ]

  [tool.deptry.package_module_name_map]
  graphql-core = "graphql"
  pillow = "PIL"
  python-magic-bin = "magic"

  [tool.deptry.per_rule_ignores]
  DEP001 = [ "pkg_resources" ]
  DEP002 = [
  "azure-common",
  "azure-storage-blob",
  "azure-storage-common",
  "django-redis",
  "psycopg",
  "pyxb"
]

[tool.django-stubs]
django_settings_module = "saleor.settings"

[tool.mypy]
allow_untyped_globals = true
allow_redefinition = true
check_untyped_defs = true
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
warn_redundant_casts = true
warn_unused_ignores = true
plugins = [ "mypy_django_plugin.main", "pydantic.mypy" ]
exclude = [ "tests/" ]

  [[tool.mypy.overrides]]
  module = [ "saleor.*.migrations.*" ]
  ignore_errors = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
target-version = "py312"

  [tool.ruff.lint]
  select = [
  "ASYNC",
  "B",
  "C4",
  "D",
  "DTZ",
  "E",
  "F",
  "FURB",
  "G",
  "I",
  "ISC001",
  "ISC002",
  "LOG",
  "PGH",
  "PIE",
  "PT",
  "PYI",
  "RET",
  "T20",
  "UP",
  "W"
]
  ignore = [
  "B009",
  "B010",
  "B023",
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D202",
  "D203",
  "D206",
  "D213",
  "D407",
  "E501",
  "PT019",
  "PYI041",
  "RET504"
]

    [tool.ruff.lint.flake8-pytest-style]
    fixture-parentheses = false
    mark-parentheses = false

    [tool.ruff.lint.isort]
    known-first-party = [ "saleor" ]
